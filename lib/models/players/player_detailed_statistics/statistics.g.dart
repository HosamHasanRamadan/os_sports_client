// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'statistics.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

Statistics _$StatisticsFromJson(Map<String, dynamic> json) => Statistics(
      rating: (json['rating'] as num?)?.toDouble(),
      totalRating: (json['totalRating'] as num?)?.toDouble(),
      countRating: json['countRating'] as int?,
      goals: json['goals'] as int?,
      bigChancesCreated: json['bigChancesCreated'] as int?,
      bigChancesMissed: json['bigChancesMissed'] as int?,
      goalsAssistsSum: json['goalsAssistsSum'] as int?,
      accuratePasses: json['accuratePasses'] as int?,
      inaccuratePasses: json['inaccuratePasses'] as int?,
      totalPasses: json['totalPasses'] as int?,
      accuratePassesPercentage:
          (json['accuratePassesPercentage'] as num?)?.toDouble(),
      accurateOwnHalfPasses: json['accurateOwnHalfPasses'] as int?,
      accurateOppositionHalfPasses:
          json['accurateOppositionHalfPasses'] as int?,
      accurateFinalThirdPasses: json['accurateFinalThirdPasses'] as int?,
      keyPasses: json['keyPasses'] as int?,
      successfulDribbles: json['successfulDribbles'] as int?,
      successfulDribblesPercentage:
          (json['successfulDribblesPercentage'] as num?)?.toDouble(),
      tackles: json['tackles'] as int?,
      interceptions: json['interceptions'] as int?,
      yellowCards: json['yellowCards'] as int?,
      directRedCards: json['directRedCards'] as int?,
      redCards: json['redCards'] as int?,
      accurateCrosses: json['accurateCrosses'] as int?,
      accurateCrossesPercentage:
          (json['accurateCrossesPercentage'] as num?)?.toDouble(),
      totalShots: json['totalShots'] as int?,
      shotsOnTarget: json['shotsOnTarget'] as int?,
      shotsOffTarget: json['shotsOffTarget'] as int?,
      groundDuelsWon: json['groundDuelsWon'] as int?,
      groundDuelsWonPercentage:
          (json['groundDuelsWonPercentage'] as num?)?.toDouble(),
      aerialDuelsWon: json['aerialDuelsWon'] as int?,
      aerialDuelsWonPercentage:
          (json['aerialDuelsWonPercentage'] as num?)?.toDouble(),
      totalDuelsWon: json['totalDuelsWon'] as int?,
      totalDuelsWonPercentage:
          (json['totalDuelsWonPercentage'] as num?)?.toDouble(),
      minutesPlayed: json['minutesPlayed'] as int?,
      goalConversionPercentage:
          (json['goalConversionPercentage'] as num?)?.toDouble(),
      penaltiesTaken: json['penaltiesTaken'] as int?,
      penaltyGoals: json['penaltyGoals'] as int?,
      penaltyWon: json['penaltyWon'] as int?,
      penaltyConceded: json['penaltyConceded'] as int?,
      shotFromSetPiece: json['shotFromSetPiece'] as int?,
      freeKickGoal: json['freeKickGoal'] as int?,
      goalsFromInsideTheBox: json['goalsFromInsideTheBox'] as int?,
      goalsFromOutsideTheBox: json['goalsFromOutsideTheBox'] as int?,
      shotsFromInsideTheBox: json['shotsFromInsideTheBox'] as int?,
      shotsFromOutsideTheBox: json['shotsFromOutsideTheBox'] as int?,
      headedGoals: json['headedGoals'] as int?,
      leftFootGoals: json['leftFootGoals'] as int?,
      rightFootGoals: json['rightFootGoals'] as int?,
      accurateLongBalls: json['accurateLongBalls'] as int?,
      accurateLongBallsPercentage:
          (json['accurateLongBallsPercentage'] as num?)?.toDouble(),
      clearances: json['clearances'] as int?,
      errorLeadToGoal: json['errorLeadToGoal'] as int?,
      errorLeadToShot: json['errorLeadToShot'] as int?,
      dispossessed: json['dispossessed'] as int?,
      possessionLost: json['possessionLost'] as int?,
      possessionWonAttThird: json['possessionWonAttThird'] as int?,
      totalChippedPasses: json['totalChippedPasses'] as int?,
      accurateChippedPasses: json['accurateChippedPasses'] as int?,
      touches: json['touches'] as int?,
      wasFouled: json['wasFouled'] as int?,
      fouls: json['fouls'] as int?,
      hitWoodwork: json['hitWoodwork'] as int?,
      ownGoals: json['ownGoals'] as int?,
      dribbledPast: json['dribbledPast'] as int?,
      offsides: json['offsides'] as int?,
      blockedShots: json['blockedShots'] as int?,
      passToAssist: json['passToAssist'] as int?,
      saves: json['saves'] as int?,
      cleanSheet: json['cleanSheet'] as int?,
      penaltyFaced: json['penaltyFaced'] as int?,
      penaltySave: json['penaltySave'] as int?,
      savedShotsFromInsideTheBox: json['savedShotsFromInsideTheBox'] as int?,
      savedShotsFromOutsideTheBox: json['savedShotsFromOutsideTheBox'] as int?,
      goalsConcededInsideTheBox: json['goalsConcededInsideTheBox'] as int?,
      goalsConcededOutsideTheBox: json['goalsConcededOutsideTheBox'] as int?,
      punches: json['punches'] as int?,
      runsOut: json['runsOut'] as int?,
      successfulRunsOut: json['successfulRunsOut'] as int?,
      highClaims: json['highClaims'] as int?,
      crossesNotClaimed: json['crossesNotClaimed'] as int?,
      matchesStarted: json['matchesStarted'] as int?,
      penaltyConversion: json['penaltyConversion'] as int?,
      setPieceConversion: json['setPieceConversion'] as int?,
      totalAttemptAssist: json['totalAttemptAssist'] as int?,
      totalContest: json['totalContest'] as int?,
      totalCross: json['totalCross'] as int?,
      duelLost: json['duelLost'] as int?,
      aerialLost: json['aerialLost'] as int?,
      attemptPenaltyMiss: json['attemptPenaltyMiss'] as int?,
      attemptPenaltyPost: json['attemptPenaltyPost'] as int?,
      attemptPenaltyTarget: json['attemptPenaltyTarget'] as int?,
      totalLongBalls: json['totalLongBalls'] as int?,
      goalsConceded: json['goalsConceded'] as int?,
      tacklesWon: json['tacklesWon'] as int?,
      tacklesWonPercentage: (json['tacklesWonPercentage'] as num?)?.toDouble(),
      scoringFrequency: (json['scoringFrequency'] as num?)?.toDouble(),
      yellowRedCards: json['yellowRedCards'] as int?,
      savesCaught: json['savesCaught'] as int?,
      savesParried: json['savesParried'] as int?,
      totalOwnHalfPasses: json['totalOwnHalfPasses'] as int?,
      totalOppositionHalfPasses: json['totalOppositionHalfPasses'] as int?,
      totwAppearances: json['totwAppearances'] as int?,
      id: json['id'] as int?,
      assists: json['assists'] as int?,
      type: json['type'] as String?,
      appearances: json['appearances'] as int?,
    );

Map<String, dynamic> _$StatisticsToJson(Statistics instance) =>
    <String, dynamic>{
      'rating': instance.rating,
      'totalRating': instance.totalRating,
      'countRating': instance.countRating,
      'goals': instance.goals,
      'bigChancesCreated': instance.bigChancesCreated,
      'bigChancesMissed': instance.bigChancesMissed,
      'goalsAssistsSum': instance.goalsAssistsSum,
      'accuratePasses': instance.accuratePasses,
      'inaccuratePasses': instance.inaccuratePasses,
      'totalPasses': instance.totalPasses,
      'accuratePassesPercentage': instance.accuratePassesPercentage,
      'accurateOwnHalfPasses': instance.accurateOwnHalfPasses,
      'accurateOppositionHalfPasses': instance.accurateOppositionHalfPasses,
      'accurateFinalThirdPasses': instance.accurateFinalThirdPasses,
      'keyPasses': instance.keyPasses,
      'successfulDribbles': instance.successfulDribbles,
      'successfulDribblesPercentage': instance.successfulDribblesPercentage,
      'tackles': instance.tackles,
      'interceptions': instance.interceptions,
      'yellowCards': instance.yellowCards,
      'directRedCards': instance.directRedCards,
      'redCards': instance.redCards,
      'accurateCrosses': instance.accurateCrosses,
      'accurateCrossesPercentage': instance.accurateCrossesPercentage,
      'totalShots': instance.totalShots,
      'shotsOnTarget': instance.shotsOnTarget,
      'shotsOffTarget': instance.shotsOffTarget,
      'groundDuelsWon': instance.groundDuelsWon,
      'groundDuelsWonPercentage': instance.groundDuelsWonPercentage,
      'aerialDuelsWon': instance.aerialDuelsWon,
      'aerialDuelsWonPercentage': instance.aerialDuelsWonPercentage,
      'totalDuelsWon': instance.totalDuelsWon,
      'totalDuelsWonPercentage': instance.totalDuelsWonPercentage,
      'minutesPlayed': instance.minutesPlayed,
      'goalConversionPercentage': instance.goalConversionPercentage,
      'penaltiesTaken': instance.penaltiesTaken,
      'penaltyGoals': instance.penaltyGoals,
      'penaltyWon': instance.penaltyWon,
      'penaltyConceded': instance.penaltyConceded,
      'shotFromSetPiece': instance.shotFromSetPiece,
      'freeKickGoal': instance.freeKickGoal,
      'goalsFromInsideTheBox': instance.goalsFromInsideTheBox,
      'goalsFromOutsideTheBox': instance.goalsFromOutsideTheBox,
      'shotsFromInsideTheBox': instance.shotsFromInsideTheBox,
      'shotsFromOutsideTheBox': instance.shotsFromOutsideTheBox,
      'headedGoals': instance.headedGoals,
      'leftFootGoals': instance.leftFootGoals,
      'rightFootGoals': instance.rightFootGoals,
      'accurateLongBalls': instance.accurateLongBalls,
      'accurateLongBallsPercentage': instance.accurateLongBallsPercentage,
      'clearances': instance.clearances,
      'errorLeadToGoal': instance.errorLeadToGoal,
      'errorLeadToShot': instance.errorLeadToShot,
      'dispossessed': instance.dispossessed,
      'possessionLost': instance.possessionLost,
      'possessionWonAttThird': instance.possessionWonAttThird,
      'totalChippedPasses': instance.totalChippedPasses,
      'accurateChippedPasses': instance.accurateChippedPasses,
      'touches': instance.touches,
      'wasFouled': instance.wasFouled,
      'fouls': instance.fouls,
      'hitWoodwork': instance.hitWoodwork,
      'ownGoals': instance.ownGoals,
      'dribbledPast': instance.dribbledPast,
      'offsides': instance.offsides,
      'blockedShots': instance.blockedShots,
      'passToAssist': instance.passToAssist,
      'saves': instance.saves,
      'cleanSheet': instance.cleanSheet,
      'penaltyFaced': instance.penaltyFaced,
      'penaltySave': instance.penaltySave,
      'savedShotsFromInsideTheBox': instance.savedShotsFromInsideTheBox,
      'savedShotsFromOutsideTheBox': instance.savedShotsFromOutsideTheBox,
      'goalsConcededInsideTheBox': instance.goalsConcededInsideTheBox,
      'goalsConcededOutsideTheBox': instance.goalsConcededOutsideTheBox,
      'punches': instance.punches,
      'runsOut': instance.runsOut,
      'successfulRunsOut': instance.successfulRunsOut,
      'highClaims': instance.highClaims,
      'crossesNotClaimed': instance.crossesNotClaimed,
      'matchesStarted': instance.matchesStarted,
      'penaltyConversion': instance.penaltyConversion,
      'setPieceConversion': instance.setPieceConversion,
      'totalAttemptAssist': instance.totalAttemptAssist,
      'totalContest': instance.totalContest,
      'totalCross': instance.totalCross,
      'duelLost': instance.duelLost,
      'aerialLost': instance.aerialLost,
      'attemptPenaltyMiss': instance.attemptPenaltyMiss,
      'attemptPenaltyPost': instance.attemptPenaltyPost,
      'attemptPenaltyTarget': instance.attemptPenaltyTarget,
      'totalLongBalls': instance.totalLongBalls,
      'goalsConceded': instance.goalsConceded,
      'tacklesWon': instance.tacklesWon,
      'tacklesWonPercentage': instance.tacklesWonPercentage,
      'scoringFrequency': instance.scoringFrequency,
      'yellowRedCards': instance.yellowRedCards,
      'savesCaught': instance.savesCaught,
      'savesParried': instance.savesParried,
      'totalOwnHalfPasses': instance.totalOwnHalfPasses,
      'totalOppositionHalfPasses': instance.totalOppositionHalfPasses,
      'totwAppearances': instance.totwAppearances,
      'id': instance.id,
      'assists': instance.assists,
      'type': instance.type,
      'appearances': instance.appearances,
    };
